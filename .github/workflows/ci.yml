# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: JBoss Remoting CI

on:
  push:
    branches: [ "master", "5.0", "5.1" ]
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  schedule:
    - cron: 0 0 * * 0

jobs:
  build-all:
    name: Compile (no tests) with JDK 8
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v3
      name: Install JDK 8
      with:
        distribution: temurin
        java-version: 8
    - name: Build
      run: mvn -U -B -fae -DskipTests clean install
    - name: Tar Maven Repo
      shell: bash
      run: tar -czf maven-repo.tgz -C ~ .m2/repository
    - name: Persist Maven Repo
      uses: actions/upload-artifact@v1
      with:
        name: maven-repo
        path: maven-repo.tgz
    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: surefire-reports-build
        path: '**/surefire-reports/*.txt'
  test-matrix:
    name: ${{ matrix.openjdk_impl}}-${{ matrix.jdk }}-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: build-all
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-latest, macos-latest]
        jdk: [8, 11, 14, 17, 19]
        openjdk_impl: [temurin, adopt-openj9]
        exclude:
          - openjdk_impl: temurin
            jdk: 14
          - openjdk_impl: adopt-openj9
            jdk: 19
    steps:
    - name: Configure runner - Linux 
      if: contains(matrix.os, 'ubuntu')
      run: |
        sudo bash -c "echo '127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4' > /etc/hosts"
        sudo bash -c "echo '::1         localhost localhost.localdomain localhost6 localhost6.localdomain6' >> /etc/hosts"
        sudo apt-get update
        sudo apt-get install openssl net-tools -y
        sudo sysctl -w net.ipv4.ip_local_port_range="13000 64000"
        sudo sysctl -w net.ipv4.tcp_tw_reuse=0
    - name: Configure Runner - Windows
      if: contains(matrix.os, 'windows')
      run: |
        echo '127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4' > %SystemRoot%\System32\drivers\etc\hosts
        echo '::1         localhost localhost.localdomain localhost6 localhost6.localdomain6' >> %SystemRoot%\System32\drivers\etc\hosts
        choco install openssl --version=1.1.1.4 -y
        refreshenv
      shell: cmd
    - name: Configure Runner - OSX
      if: contains(matrix.os, 'macos')
      run: |
        brew update
        brew install openssl
        brew link --force openssl
        export PATH="/usr/local/opt/openssl@1.1/bin:$PATH"
        echo 'export PATH="/usr/local/opt/openssl@1.1/bin:$PATH"' >> /Users/runner/.bash_profile
        openssl version -a
        which openssl
    - name: Run netstat (pre)
      if: always()
      run: netstat -an
      shell: bash
    - uses: actions/checkout@v3
    - name: Download Maven Repo
      uses: actions/download-artifact@v3
      with:
        name: maven-repo
        path: .
    - name: Extract Maven Repo
      shell: bash
      run: tar -xzf maven-repo.tgz -C ~
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v3
      with:
        distribution: ${{ matrix.openjdk_impl }}
        java-version: ${{ matrix.jdk }}
    - name: Run Tests
      run: mvn -U -B -fae test
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: surefire-reports-${{ matrix.openjdk_impl}}-${{ matrix.jdk }}-${{ matrix.os }}
        path: '**/surefire-reports/*.txt'
    - name: Run netstat (post)
      if: always()
      run: netstat -an

